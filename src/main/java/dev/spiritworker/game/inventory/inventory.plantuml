@startuml

title __INVENTORY's Class Diagram__\n

  namespace dev.spiritworker {
    namespace game {
      namespace inventory {
        abstract class dev.spiritworker.game.inventory.BaseInventoryTab {
            # items : Item[]
            - inventory : Inventory
            - slotType : InventorySlotType
            + BaseInventoryTab()
            + deleteItem()
            + getCharacter()
            + getInventory()
            + getItemAt()
            + getItems()
            + getSlotType()
            + isValidItemSlot()
            + putItem()
            + putItem()
            + searchItemById()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace game {
      namespace inventory {
        class dev.spiritworker.game.inventory.Inventory {
            - character : GameCharacter
            - tabs : Map<Integer, BaseInventoryTab>
            + Inventory()
            + addItem()
            + combineItem()
            + deleteItem()
            + deleteItem()
            + divideItem()
            + getCharacter()
            + getCosmeticItems()
            + getEquippedItems()
            + getInventoryTabByType()
            + getInventoryTabByType()
            + getTabByType()
            + getTabByType()
            + getWeapon()
            + loadCosmetics()
            + loadItems()
            + moveItem()
            + useItem()
            - initTabs()
            - loadItem()
            - registerTab()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace game {
      namespace inventory {
        class dev.spiritworker.game.inventory.InventoryEquippable {
            + InventoryEquippable()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace game {
      namespace inventory {
        enum InventorySlotType {
          BANK_FASHION
          BANK_NORMAL
          BANK_PREMIUM
          COSMETIC
          EQUIPPED
          FASHION
          NORMAL
          PREMIUM
          defaultCapacity
          id
          maxUpgrades
          tabsTypes
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace game {
      namespace inventory {
        class dev.spiritworker.game.inventory.InventoryTab {
            - capacity : int
            - upgrades : int
            + InventoryTab()
            + addItem()
            + addItemDirectly()
            + getCapacity()
            + getFreeSlotsCount()
            + getUpgrades()
            + setUpgrades()
            + upgrade()
            - recalcCapacity()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace game {
      namespace inventory {
        class dev.spiritworker.game.inventory.Item {
            {static} + UNKNOWN2 : int
            - accountId : int
            - characterId : int
            - count : int
            - damage : int
            {static} - defaultInner : String
            - defence : int
            - durability : int
            - dyeColor : int
            - id : ObjectId
            - inner : String
            - itemDef : ItemDef
            - itemId : int
            {static} - nextUniqueId : int
            - slot : int
            - tab : int
            - uniqueId : int
            - upgrades : int
            - usedUpgrades : int
            + Item()
            + Item()
            + Item()
            + addUpgrade()
            + addUsedUpgrades()
            + getAccountId()
            + getCharacterId()
            + getCount()
            + getDefence()
            + getDurability()
            + getDyeColor()
            + getItemDef()
            + getItemId()
            + getObjectId()
            + getSlot()
            + getTab()
            + getUniqueId()
            + getUpgrades()
            + getUsedUpgrades()
            + getWeaponDamage()
            + onLoad()
            + save()
            + setCount()
            + setDurability()
            + setDyeColor()
            + setOwner()
            + setSlot()
            + write()
            {static} + writeEmpty()
            + writeMetadata()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace game {
      namespace inventory {
        enum ItemEnhanceResult {
          BREAK
          FAILURE
          SUCCESS
          value
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
