@startuml

title __MAP's Class Diagram__\n

  namespace dev.spiritworker {
    namespace game {
      namespace map {
        class dev.spiritworker.game.map.District {
            - districtDef : DistrictDef
            - npcs : Int2ObjectMap<Npc>
            + District()
            + getDef()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace game {
      namespace map {
        class dev.spiritworker.game.map.GameMap {
            - characters : Set<GameCharacter>
            - mapId : int
            + GameMap()
            + addCharacter()
            + broadcastPacket()
            + broadcastPacketFrom()
            + getCharacters()
            + getMapId()
            + getPlayersInfo()
            + onEnter()
            + onLeave()
            + removeCharacter()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace game {
      namespace map {
        class dev.spiritworker.game.map.Maze {
            - bosses : Int2ObjectMap<Monster>
            - currentStage : MazeStageData
            - currentStageCounter : int
            - def : MazeDef
            - lastId : int
            - mazeManager : MazeManager
            - monsters : Int2ObjectMap<Monster>
            - nextWave : int
            + Maze()
            + broadcastPacketToLoadedCharacters()
            + deregisterMonster()
            + getBosses()
            + getData()
            + getDef()
            + getMazeManager()
            + getMonsters()
            + getNextId()
            + getServer()
            + onEnter()
            + onEnterPortal()
            + onEntered()
            + onLeave()
            + onMonsterDeath()
            + onSkillUse()
            + registerBoss()
            + registerMonster()
            + run()
            - advanceStage()
            - advanceWave()
            - spawnMonster()
            - spawnMonstersInWave()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace game {
      namespace map {
        class dev.spiritworker.game.map.Monster {
            - angle : float
            - hp : float
            - id : int
            - level : int
            - maxHp : float
            - monsterDef : MonsterDef
            - percentHp : int
            - position : Position
            + Monster()
            + Monster()
            + getAngle()
            + getCurrentHealth()
            + getDef()
            + getId()
            + getLevel()
            + getMaxHealth()
            + getPercentHealth()
            + getPosition()
            + isBoss()
            + setAngle()
            + setHealth()
            + takeDamage()
            + write()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace game {
      namespace map {
        class dev.spiritworker.game.map.Npc {
            - npc : NpcDef
            + Npc()
            + write()
        }
      }
    }
  }
  

  dev.spiritworker.game.map.Maze .up.|> Runnable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
