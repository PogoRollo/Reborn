@startuml

title __TCP's Class Diagram__\n

  namespace dev.spiritworker {
    namespace netty {
      namespace tcp {
        abstract class dev.spiritworker.netty.tcp.TcpHandler {
            - channel : Channel
            - ctx : ChannelHandlerContext
            + channelRead()
            + channelReadComplete()
            + channelRegistered()
            + channelUnregistered()
            + close()
            + exceptionCaught()
            + getAddress()
            + getAddressString()
            + isClosed()
            + isOpen()
            + isWritable()
            {abstract} + onConnect()
            {abstract} + onDisconnect()
            {abstract} + onMessage()
            + sendPacket()
            + trySendPacket()
            # logPacket()
            # logPacket()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace netty {
      namespace tcp {
        abstract class dev.spiritworker.netty.tcp.TcpServer {
            - address : InetSocketAddress
            - bootStrap : ServerBootstrap
            - bossGroup : EventLoopGroup
            - channel : Channel
            - serverInitializer : ChannelInitializer<SocketChannel>
            - workerGroup : EventLoopGroup
            + TcpServer()
            + close()
            + finish()
            + getAddress()
            + getServerInitializer()
            + run()
            + setServerInitializer()
            {abstract} # onStart()
        }
      }
    }
  }
  

  namespace dev.spiritworker {
    namespace netty {
      namespace tcp {
        class dev.spiritworker.netty.tcp.TcpServerInitializer {
            + TcpServerInitializer()
            + initChannel()
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
